<controls:MetroWindow  x:Class="LandscapeClassifier.View.Open.AddLayersDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LandscapeClassifier.View"
        xmlns:model="clr-namespace:LandscapeClassifier.Model"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:converter="clr-namespace:LandscapeClassifier.Converter"
        xmlns:dialogs="clr-namespace:LandscapeClassifier.ViewModel.Dialogs"
        mc:Ignorable="d"
        Title="Add Layers" Height="423.056" Width="1024"
        GlowBrush="{DynamicResource AccentColorBrush}"
        DataContext="{StaticResource AddLayersViewModel}">
    <Window.Resources>
        <converter:InverseBooleanConverter x:Key="InverseBoolConverter" />
        <ObjectDataProvider MethodName="GetValues"
                    ObjectType="{x:Type system:Enum}"
                    x:Key="SateliteDataProvider">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="model:SatelliteType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.Resources>
            <FrameworkElement x:Key="ProxyElement"
                         DataContext="{Binding}"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.ColumnSpan="3" x:Name="MissingBandsInfoTextBlock" Visibility="Visible" Foreground="DarkRed" Margin="5">Some layers used in this training set are missing and need to be loaded. Cancel will abort import.</TextBlock>

        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal">
            <CheckBox  Margin="5" IsChecked="{Binding AddRgb, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AllRgbChannelsAdded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center">Add RGB</CheckBox>
            <CheckBox Margin="5" IsChecked="{Binding RgbContrastEnhancement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AddRgb, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center">RGB Contrast Enhancement</CheckBox>
        </StackPanel>
        <DataGrid Grid.Row="2" Grid.ColumnSpan="3"  IsEnabled="{Binding MissingBandsImport, Converter={StaticResource InverseBoolConverter}}" AutoGenerateColumns="False" ItemsSource="{Binding Layers, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="5" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" >
            <DataGrid.Resources>
                <ObjectDataProvider x:Key="SatelliteTypeDataProvider" 
                        MethodName="GetValues" 
                        ObjectType="{x:Type system:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="model:SatelliteType"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Width="*" Header="Path" Binding="{Binding Path}" IsReadOnly="True" />
                <DataGridCheckBoxColumn Width="Auto" ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="Contrast Enhancement"
                                        Binding="{Binding Path=ContrastEnhancement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
                <DataGridTemplateColumn Header="Min" MinWidth="75">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <controls:NumericUpDown 
                                Minimum="0" Maximum="1" Interval="0.01" 
                                Value="{Binding MinCutOff, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                IsEnabled="{Binding ContrastEnhancement}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Max" MinWidth="75">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <controls:NumericUpDown 
                                Minimum="0" Maximum="1" Interval="0.01" 
                                Value="{Binding MaxCutOff, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                IsEnabled="{Binding ContrastEnhancement}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridComboBoxColumn MinWidth="80" Header="Satellite Band" 
                                        ItemsSource="{Binding Source={StaticResource SatelliteTypeDataProvider}}" 
                                        SelectedItemBinding="{Binding Path=SatelliteType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="R"
                                        MinWidth="30"
                                        Binding="{Binding Path=R, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
                <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="G"
                                        MinWidth="30"
                                        Binding="{Binding Path=G, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
                <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="B"
                                        MinWidth="30"
                                        Binding="{Binding Path=B, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Grid.Row="3" Grid.Column="0" x:Name="AddRemoveBandsStackPanel" Orientation="Horizontal">
            <Button Width="90" Margin="5,5,5,5" HorizontalAlignment="Left" Content="Add Layer" Click="AddBandsClick" ></Button>
            <Button Width="125" Margin="5,5,5,5" HorizontalAlignment="Left" Content="Remove Layer" Click="AddBandsClick" ></Button>
        </StackPanel>

        <StackPanel Grid.Row="4" Grid.Column="0"  Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5,5,5,5">
            <Button IsDefault="True" Content="Ok" Click="OkClick" Width="60"/>
            <Button IsCancel="True" Content="Cancel" Click="CancelClick" Width="60" Margin="5,0,0,0"/>
        </StackPanel>

    </Grid>
</controls:MetroWindow>
