<controls:MetroWindow x:Class="LandscapeClassifier.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:LandscapeClassifier"
        xmlns:converter="clr-namespace:LandscapeClassifier.Converter"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:validationRules="clr-namespace:LandscapeClassifier.View.ValidationRules"
        xmlns:classifierControls="clr-namespace:LandscapeClassifier.Controls"
        xmlns:classification="clr-namespace:LandscapeClassifier.ViewModel.MainWindow.Classification"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        GlowBrush="{DynamicResource AccentColorBrush}"
        Title="Land Cover Classifier" DataContext="{StaticResource MainWindowViewModel}"  Icon="/Resources/Icons/Icon128_3.png" WindowTitleBrush="#DDDDDD" Height="900" Width="1440" UseLayoutRounding="True">

    <Window.Resources>
        <ResourceDictionary>
            <converter:DoubleRoundingConverter x:Key="DoubleRoundingConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel IsEnabled="{Binding WindowEnabled}">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Export Training Features" Command="{Binding ClassifierViewModel.ExportFeaturesCommand}"/>
                <MenuItem Header="_Import Training Features" Command="{Binding ClassifierViewModel.ImportFeatureCommand}"/>
                <MenuItem Header="_Export Predictions" Command="{Binding PredictionViewModel.ExportPredictionsCommand}"/>
                <MenuItem Header="_Export Slope Image" Command="{Binding ExportSlopeImageCommand}"/>
                <MenuItem Header="_Export Curvature Image" Command="{Binding ExportCurvatureImageCommand}"/>
                <MenuItem Header="_Export Smoothed Heightmap Image" Command="{Binding ExportSmoothedHeightImageCommand}"/>
                <MenuItem Header="_Exit" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Create Slope From Heightmap" Command="{Binding CreateSlopeFromHeightmapCommand}"/>
                <MenuItem Header="_Create Tiled Heightmap" Command="{Binding CreateTiledHeightmapCommand}"/>
            </MenuItem>
        </Menu>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                <Button x:Name="OpenOrthoImage" Command="{Binding AddLayersCommand}"  Content="Add Layer" HorizontalAlignment="Left" Margin="5" VerticalAlignment="Top"/>
                <Label Margin="5" ToolTip="Right click into image to add a feature with the current landcover type.">Feature Landcover Type:</Label>
                <ComboBox SelectedIndex="0" SelectedValue="{Binding ClassifierViewModel.SelectedLandCoverType}" ItemsSource="{Binding ClassifierViewModel.LandCoverTypesEnumerable}" x:Name="ComboBox"  HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Center"/>
            </StackPanel>
            <TabControl Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                <TabItem  Header="Training" IsEnabled="{Binding PredictionViewModel.NotBlocking}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid MinWidth="250" Grid.Row="0" Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid  Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Column="0"  Margin="5" VerticalAlignment="Center" IsChecked="{Binding ClassifierViewModel.MultipleBandsEnabled}" HorizontalAlignment="Left">Multiple Layers Visible</CheckBox>
                                <StackPanel Margin="5" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button Width="32" Height="32" Margin="5,0,0,0" Command="{Binding MoveLayerDownCommand}">
                                        <iconPacks:PackIconMaterial Kind="ArrowDown" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </Button>
                                    <Button Width="32" Height="32" Margin="5,0,0,0" Command="{Binding MoveLayerUpCommand}">
                                        <iconPacks:PackIconMaterial Kind="ArrowUp" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <!--
                            <ListBox Grid.Column="0" Grid.Row="1" MinWidth="250" ItemsSource="{Binding Layers}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox  IsChecked="{Binding IsVisible}"></CheckBox>
                                            <Label Content="{Binding BandName}"></Label>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            -->
                            <DataGrid SelectionMode="Single" SelectedItem="{Binding SelectedLayer}" x:Name="LayersGrid" Grid.Column="0" AllowDrop="True" CanUserResizeColumns="False" MaxWidth="250" Grid.Row="1"  AutoGenerateColumns="False" ItemsSource="{Binding Layers}" Margin="5" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Width="*" Header="Layer" Binding="{Binding Name}" />
                                    <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="Visible" Width="Auto"
                                        Binding="{Binding Path=IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
                                    <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="Feature" Width="Auto"
                                        Binding="{Binding Path=IsFeature, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>

                        <classifierControls:ClassificationImageCanvas Grid.Column="1" Grid.Row="0" x:Name="BandImageCanvas"></classifierControls:ClassificationImageCanvas>
                        <Grid Grid.Row="0 " Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" ></ColumnDefinition>
                                    <ColumnDefinition Width="Auto" ></ColumnDefinition>
                                    <ColumnDefinition Width="Auto" ></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Content="Classifier"  Foreground="White"  Margin="5,5,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                <ComboBox SelectedIndex="0" Grid.Column="1" SelectedValue="{Binding ClassifierViewModel.SelectededClassifier}" ItemsSource="{Binding ClassifierViewModel.ClassifiersEnumerable}"   HorizontalAlignment="Stretch" Margin="5,5,5,5" VerticalAlignment="Center"/>
                                <Button Grid.Column="2" Margin="5" Content="Options"></Button>
                            </Grid>
                            <Grid Grid.Row="1" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" ></ColumnDefinition>
                                    <ColumnDefinition Width="Auto" ></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Label x:Name="ComboInfo" Grid.Column="0" Content="Landcover Type"  Foreground="White"  Margin="5,5,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Grid>
                            <TreeView  Width="325" Grid.Row="2" HorizontalAlignment="Stretch" ItemsSource="{Binding ClassifierViewModel.FeaturesViewModel.FeaturesByType}">
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType = "{x:Type classification:FeatureByTypeViewModel}" ItemsSource = "{Binding Path=Features}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=Type}"/>
                                            <TextBlock Margin="5,0,0,0" Text="{Binding Path=Features.Count}"></TextBlock>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                    <HierarchicalDataTemplate DataType = "{x:Type classification:ClassifiedFeatureVectorViewModel}">
                                        <TextBlock FontSize="9" Foreground="{Binding FeatureClassColorBrush}" Text="{Binding Path=FeatureValues}"/>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>
                            </TreeView>
                            <Button Grid.Column="0" Grid.Row="3" x:Name="RemoveButton" Command="{Binding ClassifierViewModel.RemoveSelectedFeatureVectorCommand}"  Content="Remove Feature" Margin="5,5,5,0"></Button>
                            <Button Grid.Column="0" Grid.Row="4" Command="{Binding ClassifierViewModel.RemoveAllFeaturesCommand}" Content="Remove All Features" Margin="5,5,5,0"></Button>
                            <Button Grid.Column="0" Grid.Row="5" Content="Export Features" Command="{Binding ClassifierViewModel.ExportFeaturesCommand}" Margin="5,5,5,0"></Button>
                            <Button Grid.Column="0" Grid.Row="6" Content="Import Features" Command="{Binding ClassifierViewModel.ImportFeatureCommand}" Margin="5,5,5,0"></Button>
                            <Button Grid.Column="0" Grid.Row="7" Content="Train Features" Command="{Binding ClassifierViewModel.TrainCommand}" Margin="5,5,5,0"></Button>
                        </Grid>

                        <Grid Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <StackPanel Orientation="Horizontal"  Grid.Column="0" HorizontalAlignment="Stretch" Margin="5,5,5,5" VerticalAlignment="Center">
                                <StackPanel.Resources>
                                    <converter:PointToStringConverter x:Key="PointToStringConverter" />
                                </StackPanel.Resources>
                                <Label Content="Pixel Position:" HorizontalAlignment="Left"  Margin="0,0,0,0"  VerticalAlignment="Center" />
                                <Label Content="{Binding ClassifierViewModel.MouseScreenPoisition, Mode=TwoWay, Converter={StaticResource PointToStringConverter}}" HorizontalAlignment="Left" MinWidth="75" Margin="0,0,0,0"  VerticalAlignment="Center" />
                                <Separator>
                                    <Separator.LayoutTransform>
                                        <RotateTransform Angle="90" />
                                    </Separator.LayoutTransform>
                                </Separator>
                                <Label Content="WGS84:" HorizontalAlignment="Left"  Margin="0,0,0,0"  VerticalAlignment="Center" />
                                <TextBox HorizontalAlignment="Left"  MinWidth="140" Margin="0,0,0,0"  VerticalAlignment="Center" Text="{Binding ClassifierViewModel.MouseWorldPoisition, Mode=TwoWay, Converter={StaticResource PointToStringConverter}}"/>
                                <Separator Margin="5,0,5,0">
                                    <Separator.LayoutTransform>
                                        <RotateTransform Angle="90" />
                                    </Separator.LayoutTransform>
                                </Separator>
                                <Label Content="Band Intensity:"/>
                                <ItemsControl ItemsSource="{Binding FeatureLayerView}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Label Width="22" Background="{Binding CurrentPositionBrush}" Margin="0"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <CheckBox IsEnabled="{Binding ClassifierViewModel.AreBandsUnscaled}" IsChecked="{Binding ClassifierViewModel.PreviewBandIntensityScale}" Margin="5,0,0,0" VerticalAlignment="Center">Preview Scale</CheckBox>
                            </StackPanel>
                            <StackPanel Grid.Column="1" Margin="5,5,5,5" VerticalAlignment="Center">
                                <TextBlock Text="{Binding ClassifierViewModel.TrainingStatusText}" Foreground="{Binding ClassifierViewModel.TrainingStatusBrush}"></TextBlock>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="Prediction" IsEnabled="{Binding ClassifierViewModel.IsTrained}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0"  HorizontalAlignment="Stretch"  VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" Content="Predict All" Margin="5,5,5,5" Command="{Binding PredictionViewModel.PredictAllCommand}"></Button>
                            <StackPanel Grid.Column="1" Orientation="Horizontal">
                            </StackPanel>
                            <StackPanel Grid.Column="3" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center" Margin="5,5,5,5" Text="Overlay Transparency:"></TextBlock>
                                <Slider Style="{DynamicResource FlatSlider}" Orientation="Horizontal" Value="{Binding PredictionViewModel.OverlayOpacity}" Minimum="0" Maximum="1" Width="100" TickPlacement="BottomRight" TickFrequency="0.1" VerticalAlignment="Center"></Slider>
                                <TextBlock Margin="2,5,5,5" Text="{Binding PredictionViewModel.OverlayOpacity, Converter={StaticResource DoubleRoundingConverter}}" VerticalAlignment="Center" Width="50"/>
                            </StackPanel>
                        </Grid>
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <Button Content="Apply Majority Filter" Command="{Binding PredictionViewModel.ApplyMajorityFilterCommand}" Margin="5,5,5,5"></Button>
                            <Button Content="Export" Command="{Binding PredictionViewModel.ExportPredictionsCommand}" Margin="5,5,5,5"></Button>
                        </StackPanel>
                        <Grid  Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <DataGrid Grid.Column="0" SelectionMode="Single" AllowDrop="True" CanUserResizeColumns="False" MaxWidth="250" Grid.Row="1"  AutoGenerateColumns="False" ItemsSource="{Binding Layers}" Margin="5" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Width="*" Header="Layer" Binding="{Binding Name}" />
                                    <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="Visible" Width="Auto"
                                        Binding="{Binding Path=IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
                                </DataGrid.Columns>
                            </DataGrid>
                            <classifierControls:PredictionImageCanvas Grid.Column="1"  x:Name="PredictionCanvas"></classifierControls:PredictionImageCanvas>
                        </Grid>
                        <Grid Grid.Row="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Column="0" Orientation="Horizontal"  HorizontalAlignment="Stretch" Margin="5,5,5,5" VerticalAlignment="Center">
                                <Label Content="Pixel Prediction:" HorizontalAlignment="Left"  Margin="0,0,0,0"  VerticalAlignment="Center" />
                                <Label MinWidth="150" Content="{Binding PredictionViewModel.MousePredictionType}" HorizontalAlignment="Left"  Margin="0,0,0,0"  VerticalAlignment="Center" />
                                <Label Content="Prediction Probability:" HorizontalAlignment="Left"  Margin="0,0,0,0"  VerticalAlignment="Center" />
                                <Label MinWidth="150" Content="{Binding PredictionViewModel.MousePredictionProbability}" HorizontalAlignment="Left"  Margin="0,0,0,0"  VerticalAlignment="Center" />
                                
                            </StackPanel>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" Visibility="{Binding PredictionViewModel.ProgressVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <Label VerticalAlignment="Center">Prediction Progress:</Label>
                                <controls:MetroProgressBar Value="{Binding PredictionViewModel.PredictionProgress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="100" HorizontalAlignment="Right" Width="100" Margin="5"></controls:MetroProgressBar>
                            </StackPanel>
                        </Grid>


                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </DockPanel>
</controls:MetroWindow>







